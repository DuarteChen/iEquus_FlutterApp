import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:equus/models/horse.dart';

class CreateHorseScreen extends StatefulWidget {
  const CreateHorseScreen({super.key});

  @override
  _CreateHorseScreenState createState() => _CreateHorseScreenState();
}

class _CreateHorseScreenState extends State<CreateHorseScreen> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  final _birthDateController = TextEditingController();
  final _profilePictureController = TextEditingController();
  final _rightFrontPictureController = TextEditingController();
  final _leftFrontPictureController = TextEditingController();
  final _rightHindPictureController = TextEditingController();
  final _leftHindPictureController = TextEditingController();

  Future<void> _saveHorse() async {
    if (_formKey.currentState!.validate()) {
      final horse = Horse(
        idHorse: 0, // idHorse will be auto-generated by the database
        name: _nameController.text,
        birthDate: _birthDateController.text,
        profilePicturePath: _profilePictureController.text.isNotEmpty
            ? _profilePictureController.text
            : null,
        pictureRightFrontPath: _rightFrontPictureController.text.isNotEmpty
            ? _rightFrontPictureController.text
            : null,
        pictureLeftFrontPath: _leftFrontPictureController.text.isNotEmpty
            ? _leftFrontPictureController.text
            : null,
        pictureRightHindPath: _rightHindPictureController.text.isNotEmpty
            ? _rightHindPictureController.text
            : null,
        pictureLeftHindPath: _leftHindPictureController.text.isNotEmpty
            ? _leftHindPictureController.text
            : null,
      );

      final response = await http.post(
        Uri.parse('http://10.0.2.2:9090/horses'), // Your API URL here
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: {
          'name': horse.name,
          'birthDate': horse.birthDate,
          'profilePicturePath': horse.profilePicturePath ?? '',
          'pictureRightFrontPath': horse.pictureRightFrontPath ?? '',
          'pictureLeftFrontPath': horse.pictureLeftFrontPath ?? '',
          'pictureRightHindPath': horse.pictureRightHindPath ?? '',
          'pictureLeftHindPath': horse.pictureLeftHindPath ?? '',
        },
      );

      if (response.statusCode == 201) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Horse created successfully!')),
        );
        Navigator.pop(context); // Go back after successful creation
      } else {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Failed to create horse')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Create New Horse"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(
                controller: _nameController,
                decoration: InputDecoration(
                  labelText: "Horse Name",
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Please enter the horse's name";
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _birthDateController,
                decoration: InputDecoration(
                  labelText: "Birth Date",
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Please enter the birth date";
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _profilePictureController,
                decoration: InputDecoration(
                  labelText: "Profile Picture URL (optional)",
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _rightFrontPictureController,
                decoration: InputDecoration(
                  labelText: "Right Front Picture URL (optional)",
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _leftFrontPictureController,
                decoration: InputDecoration(
                  labelText: "Left Front Picture URL (optional)",
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _rightHindPictureController,
                decoration: InputDecoration(
                  labelText: "Right Hind Picture URL (optional)",
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _leftHindPictureController,
                decoration: InputDecoration(
                  labelText: "Left Hind Picture URL (optional)",
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _saveHorse,
                style: ElevatedButton.styleFrom(
                  padding: EdgeInsets.symmetric(vertical: 14),
                ),
                child: Text("Save Horse"),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
